7

import numpy as np
import pandas as pd
from sklearn import datasets
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

iris=datasets.load_iris()
x=iris.data
y=iris.target
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)
kernels=['linear','poly','rbf','sigmoid']
accuracies={}
for kernel in kernels:
    svm_model=SVC(kernel=kernel)
    svm_model.fit(x_train,y_train)
    y_pred=svm_model.predict(x_test)
    accuracy=accuracy_score(y_test,y_pred)
    accuracies[kernel]=accuracy
    print(f"Accuracy of SVM with {kernel} kernel:{accuracy:.4f}")

print("\nAccuracies of different SVM kernels:")
for kernel,acc in accuracies.items():
    print(f"{kernel}:{acc:.4f}")
def predict_flower_type(sepal_length,sepal_width,petal_length,petal_width,kernel='rbf'):
    svm_model=SVC(kernel=kernel)
    svm_model.fit(x,y)
    input_data=np.array([[sepal_length,sepal_width,petal_length,petal_width]])
    prediction=svm_model.predict(input_data)
    species=iris.target_names[prediction][0]
    return species
print("\nPredicting flower type for input data:")
sepal_length=5.1
sepal_width=3.5
petal_length=1.4
petal_width=0.2
predicted_species=predict_flower_type(sepal_length,sepal_width,petal_length,petal_width)
print("Predicted flower species:{predicted_species}")
                        
         
